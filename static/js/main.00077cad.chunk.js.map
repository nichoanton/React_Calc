{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","operators","updateCalc","value","includes","slice","eval","toString","deleteHandler","clearHandler","equalsOperator","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"y2BAGA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,6IAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,8IAAOG,OAAP,cAAeC,UAAf,cAEMC,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KAEjCC,WAAa,SAAbA,WAAcC,OAEhBF,UAAUG,SAASD,QAAmB,KAATN,MAC7BI,UAAUG,SAASD,QAAUF,UAAUG,SAASP,KAAKQ,OAAO,MAG9DP,QAAQD,KAAOM,OAEVF,UAAUG,SAASD,QACtBH,UAAUM,KAAKT,KAAOM,OAAOI,cAI3BC,cAAgB,WACpBV,QAAQD,KAAKQ,MAAM,GAAI,KAGnBI,aAAe,WACnBX,QAAQ,IACRE,UAAU,KAGNU,eAAiB,aAIvB,OACE,mEAAKC,UAAU,OAAf,UACE,mEAAKA,UAAU,SAAf,UACE,mEAAKA,UAAU,SAAf,cAA0BZ,QAAU,IAApC,OACA,mEAAKY,UAAU,gBAAf,cAAiCd,MAAQ,IAAzC,UAEF,qEAAQc,UAAU,OAAOC,QAASH,aAAlC,eACA,qEAAQG,QAASJ,cAAjB,iBACA,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQS,UAAU,OAAlB,kBAKShB,2B,6BC/Df,iDAKAkB,IAASC,OAAO,cAAC,IAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.00077cad.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./components/styles.css\";\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const operators = [\"/\", \"*\", \"-\", \"+\", \".\"];\n\n  const updateCalc = (value) => {\n    if(\n      operators.includes(value) && calc === '' ||     //if the last value is an operator and no values after\n      operators.includes(value) && operators.includes(calc.slice(-1)) //if the last value is an operator and another operator after\n    ){ return; }\n\n    setCalc(calc + value);\n\n    if (!operators.includes(value)) {                //if the last value is not an operator\n      setResult(eval(calc + value).toString());\n    }\n  };\n\n  const deleteHandler = () => {\n    setCalc(calc.slice(0, -1)); \n  };\n\n  const clearHandler = () => {\n    setCalc(\"\");\n    setResult(\"\");\n  };\n\n  const equalsOperator = () => {\n\n  };\n\n  return (\n    <div className=\"grid\">\n      <div className=\"output\">\n        <div className=\"result\"> {result || \"0\" } </div>\n        <div className=\"display-typed\"> {calc || \"0\"} </div>\n      </div>\n      <button className=\"span\" onClick={clearHandler}>C</button>\n      <button onClick={deleteHandler}>Del</button>\n      <button onClick={() => updateCalc(\"/\")}>/</button>\n      <button onClick={() => updateCalc(\"1\")}>1</button>\n      <button onClick={() => updateCalc(\"2\")}>2</button>\n      <button onClick={() => updateCalc(\"3\")}>3</button>\n      <button onClick={() => updateCalc(\"*\")}>*</button>\n      <button onClick={() => updateCalc(\"4\")}>4</button>\n      <button onClick={() => updateCalc(\"5\")}>5</button>\n      <button onClick={() => updateCalc(\"6\")}>6</button>\n      <button onClick={() => updateCalc(\"+\")}>+</button>\n      <button onClick={() => updateCalc(\"7\")}>7</button>\n      <button onClick={() => updateCalc(\"8\")}>8</button>\n      <button onClick={() => updateCalc(\"9\")}>9</button>\n      <button onClick={() => updateCalc(\"-\")}>-</button>\n      <button onClick={() => updateCalc(\".\")}>.</button>\n      <button onClick={() => updateCalc(\"0\")}>0</button>\n      <button className=\"span\">=</button>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}